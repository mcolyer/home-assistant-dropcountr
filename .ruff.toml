# Mostly copied from https://github.com/home-assistant/core/blob/dev/pyproject.toml

target-version = "py313"

[lint]
select = [
    "A001", # Variable {name} is shadowing a Python builtin
    "B002", # Python does not support the unary prefix increment
    "B005", # Using .strip() with multi-character strings is misleading
    "B007", # Loop control variable {name} not used within loop body
    "B014", # Exception handler is an except clause that only raises the caught exception
    "B015", # Pointless comparison. Did you mean to assign a value? Otherwise, prepend assert or remove it.
    "B017", # pytest.raises(BaseException) should be considered evil
    "B018", # Found useless attribute access. Either assign it to a variable or remove it.
    "B023", # Function definition does not bind loop variable {name}
    "B026", # Star-arg unpacking after a keyword argument is strongly discouraged
    "B032", # Possible unintentional type annotation (using `:`). Did you mean to assign (using `=`)?
    "B904", # Use raise from to specify exception cause
    "B905", # zip() without an explicit strict= parameter
    "C", # complexity
    "COM818", # Trailing comma on bare tuple prohibited
    "D", # docstrings
    "DTZ003", # Use datetime.now(tz=) instead of datetime.utcnow()
    "DTZ004", # Use datetime.fromtimestamp(ts, tz=) instead of datetime.utcfromtimestamp(ts)
    "E", # pycodestyle
    "F", # pyflakes/autoflake
    "FLY", # flynt
    "G", # flake8-logging-format
    "I", # isort
    "ICN001", # import concentions; {name} should be imported as {asname}
    "LOG", # flake8-logging
    "N804", # First argument of a class method should be named cls
    "N805", # First argument of a method should be named self
    "N815", # Variable {name} in class scope should not be mixedCase
    "PGH", # pygrep-hooks
    "PIE", # flake8-pie
    "PL", # pylint
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "PYI", # flake8-pyi
    "RET", # flake8-return
    "RSE", # flake8-raise
    "RUF005", # Consider iterable unpacking instead of concatenation
    "RUF006", # Store a reference to the return value of asyncio.create_task
    "RUF010", # Use explicit conversion flag
    "RUF013", # PEP 484 prohibits implicit Optional
    "RUF017", # Avoid quadratic list summation
    "RUF018", # Avoid assignment expressions in assert statements
    "RUF019", # Unnecessary key check before dictionary access
    "S102", # Use of exec detected
    "S103", # bad-file-permissions
    "S108", # hardcoded-temp-file
    "S306", # suspicious-mktemp-usage
    "S307", # suspicious-eval-usage
    "S313", # suspicious-xmlc-element-tree-usage
    "S314", # suspicious-xml-element-tree-usage
    "S315", # suspicious-xml-expat-reader-usage
    "S316", # suspicious-xml-expat-builder-usage
    "S317", # suspicious-xml-sax-usage
    "S318", # suspicious-xml-mini-dom-usage
    "S319", # suspicious-xml-pull-dom-usage
    "S601", # paramiko-call
    "S602", # subprocess-popen-with-shell-equals-true
    "S604", # call-with-shell-equals-true
    "S608", # hardcoded-sql-expression
    "S609", # unix-command-wildcard-injection
    "SIM", # flake8-simplify
    "SLF", # flake8-self
    "SLOT", # flake8-slots
    "T100", # Trace found: {name} used
    "T20", # flake8-print
    "TID251", # Banned imports
    "TRY", # tryceratops
    "UP", # pyupgrade
    "W", # pycodestyle
]

ignore = [
    "D202", # No blank lines allowed after function docstring
    "D203", # 1 blank line required before class docstring
    "D213", # Multi-line docstring summary should start at the second line
    "D406", # Section name should end with a newline
    "D407", # Section name underlining
    "E501", # line too long
    "PLC1901", # Lots of false positives
    "PLR0911", # Too many arguments to function call
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments to function call
    "PLR0915", # Too many statements
    "PLR2004", # Magic value used in comparison, ...
    "PLW2901", # Outer {outer_kind} variable {name} is overwritten by inner {inner_kind} target
    "PT006", # Wrong name(s) type in @pytest.mark.parametrize, expected {expected} but got {actual}
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "PT012", # pytest.raises() block should contain a single simple statement
    "PT018", # Assertion should be broken down into multiple parts
    "RET503", # Missing explicit return at the end of function able to return non-None value
    "RET504", # Unnecessary assignment to {name} before return statement
    "RET505", # Unnecessary {branch} after return statement
    "RUF001", # String contains ambiguous unicode character.
    "RUF002", # Docstring contains ambiguous unicode character.
    "RUF003", # Comment contains ambiguous unicode character.
    "RUF012", # Mutable class attributes should be annotated with typing.ClassVar
    "SIM102", # Use a single if-statement instead of nested if-statements
    "SIM103", # Return the condition {condition} directly
    "SIM108", # Use ternary operator instead of if-else-block for simple variable assignments.
    "SIM113", # Use enumerate for {var} in {list}
    "SIM117", # Combine multiple with statements
    "SIM118", # Use {key} in {dict} instead of {key} in {dict}.keys()
    "SLF001", # Private member accessed
    "TRY003", # Avoid specifying long messages outside the exception class
    "TRY300", # Consider moving this statement to an `else` block  
    "TRY301", # Abstract `raise` to an inner function
    "TRY400", # Use logging.exception instead of logging.error
    "UP006", # keep type annotation style as is
    "UP007", # keep type annotation style as is
    # Ignored due to performance: https://github.com/charliermarsh/ruff/issues/2923
    "UP038", # Use `X | Y` in `isinstance` call instead of `(X, Y)`
]

[lint.flake8-import-conventions.extend-aliases]
voluptuous = "vol"
"homeassistant.const" = "hass_const"
"homeassistant.helpers.area_registry" = "ar"
"homeassistant.helpers.config_validation" = "cv"
"homeassistant.helpers.device_registry" = "dr"
"homeassistant.helpers.entity_registry" = "er"
"homeassistant.helpers.issue_registry" = "ir"
"homeassistant.util.dt" = "dt_util"

[lint.flake8-pytest-style]
fixture-parentheses = false

[lint.flake8-tidy-imports.banned-api]
"async_timeout".msg = "use asyncio.timeout instead"
"pytz".msg = "use zoneinfo instead"

[lint.isort]
force-sort-within-sections = true
known-first-party = [
    "homeassistant",
]
combine-as-imports = true
split-on-trailing-comma = false

[lint.mccabe]
max-complexity = 25

[lint.per-file-ignores]
"tests/*" = ["D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107"]

[lint.pylint]
max-args = 10
max-branches = 25
max-returns = 15
max-statements = 50

[lint.flake8-quotes]
docstring-quotes = "double"